# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: speech-recognition-open-api.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from stub.google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n!speech-recognition-open-api.proto\x12\x19\x65kstep.speech_recognition\x1a\x1cgoogle/api/annotations.proto\"Y\n\x07Message\x12\r\n\x05\x61udio\x18\x01 \x01(\x0c\x12\x0c\n\x04user\x18\x02 \x01(\t\x12\x10\n\x08language\x18\x03 \x01(\t\x12\x10\n\x08speaking\x18\x04 \x01(\x08\x12\r\n\x05isEnd\x18\x05 \x01(\x08\"Q\n\x08Response\x12\x15\n\rtranscription\x18\x01 \x01(\t\x12\x0c\n\x04user\x18\x02 \x01(\t\x12\x10\n\x08language\x18\x03 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x04 \x01(\t\"\x94\x01\n\x18SpeechRecognitionRequest\x12<\n\x06\x63onfig\x18\x01 \x01(\x0b\x32,.ekstep.speech_recognition.RecognitionConfig\x12:\n\x05\x61udio\x18\x02 \x03(\x0b\x32+.ekstep.speech_recognition.RecognitionAudio\"\xb5\x0b\n\x11RecognitionConfig\x12\x35\n\x08language\x18\x01 \x01(\x0b\x32#.ekstep.speech_recognition.Language\x12R\n\x0b\x61udioFormat\x18\x02 \x01(\x0e\x32\x38.ekstep.speech_recognition.RecognitionConfig.AudioFormatH\x00\x88\x01\x01\x12O\n\x07\x63hannel\x18\x03 \x01(\x0e\x32\x39.ekstep.speech_recognition.RecognitionConfig.AudioChannelH\x01\x88\x01\x01\x12\x19\n\x0csamplingRate\x18\x04 \x01(\x03H\x02\x88\x01\x01\x12[\n\rbitsPerSample\x18\x05 \x01(\x0e\x32?.ekstep.speech_recognition.RecognitionConfig.AudioBitsPerSampleH\x03\x88\x01\x01\x12\x62\n\x13transcriptionFormat\x18\x06 \x01(\x0b\x32@.ekstep.speech_recognition.RecognitionConfig.TranscriptionFormatH\x04\x88\x01\x01\x12\x1c\n\x0fprofanityFilter\x18\x07 \x01(\x08H\x05\x88\x01\x01\x12\x43\n\x06\x64omain\x18\x08 \x03(\x0e\x32\x33.ekstep.speech_recognition.RecognitionConfig.Domain\x12\x15\n\x08\x64\x65tailed\x18\t \x01(\x08H\x06\x88\x01\x01\x12\x18\n\x0bpunctuation\x18\n \x01(\x08H\x07\x88\x01\x01\x12\x46\n\x05model\x18\x0b \x01(\x0e\x32\x32.ekstep.speech_recognition.RecognitionConfig.ModelH\x08\x88\x01\x01\x12+\n\x1e\x65nableInverseTextNormalization\x18\x0c \x01(\x08H\t\x88\x01\x01\x12\x16\n\x0epostProcessors\x18\r \x03(\t\x1aj\n\x13TranscriptionFormat\x12S\n\x05value\x18\x01 \x01(\x0e\x32\x44.ekstep.speech_recognition.RecognitionConfig.TranscriptionFormatEnum\"D\n\x17TranscriptionFormatEnum\x12\x0e\n\ntranscript\x10\x00\x12\x07\n\x03srt\x10\x01\x12\x10\n\x0c\x61lternatives\x10\x02\",\n\x12\x41udioBitsPerSample\x12\x0b\n\x07sixteen\x10\x00\x12\t\n\x05\x65ight\x10\x01\"$\n\x0c\x41udioChannel\x12\x08\n\x04mono\x10\x00\x12\n\n\x06stereo\x10\x01\"2\n\x0b\x41udioFormat\x12\x07\n\x03wav\x10\x00\x12\x07\n\x03pcm\x10\x01\x12\x07\n\x03mp3\x10\x02\x12\x08\n\x04\x66lac\x10\x03\"\x8e\x01\n\x06\x44omain\x12\x0b\n\x07GENERAL\x10\x00\x12\x08\n\x04NEWS\x10\x01\x12\r\n\tEDUCATION\x10\x02\x12\t\n\x05LEGAL\x10\x03\x12\x1c\n\x18GOVERNMENT_PRESS_RELEASE\x10\x04\x12\x0e\n\nHEALTHCARE\x10\x05\x12\n\n\x06MOVIES\x10\x06\x12\r\n\tSUBTITLES\x10\x07\x12\n\n\x06SPORTS\x10\x08\"G\n\x05Model\x12\x16\n\x12\x63ommand_and_search\x10\x00\x12\x0e\n\nphone_call\x10\x01\x12\t\n\x05video\x10\x02\x12\x0b\n\x07\x64\x65\x66\x61ult\x10\x03\x42\x0e\n\x0c_audioFormatB\n\n\x08_channelB\x0f\n\r_samplingRateB\x10\n\x0e_bitsPerSampleB\x16\n\x14_transcriptionFormatB\x12\n\x10_profanityFilterB\x0b\n\t_detailedB\x0e\n\x0c_punctuationB\x08\n\x06_modelB!\n\x1f_enableInverseTextNormalization\"\x9d\x03\n\x08Language\x12\x11\n\x04name\x18\x01 \x01(\tH\x00\x88\x01\x01\x12H\n\x0esourceLanguage\x18\x02 \x01(\x0e\x32\x30.ekstep.speech_recognition.Language.LanguageCode\"\xaa\x02\n\x0cLanguageCode\x12\x06\n\x02hi\x10\x00\x12\x06\n\x02\x65n\x10\x01\x12\x06\n\x02mr\x10\x02\x12\x06\n\x02ta\x10\x03\x12\x06\n\x02te\x10\x04\x12\x06\n\x02kn\x10\x05\x12\x06\n\x02gu\x10\x06\x12\x06\n\x02pa\x10\x07\x12\x06\n\x02\x62n\x10\x08\x12\x06\n\x02ml\x10\t\x12\x06\n\x02\x61s\x10\n\x12\x07\n\x03\x62rx\x10\x0b\x12\x07\n\x03\x64oi\x10\x0c\x12\x06\n\x02ks\x10\r\x12\x07\n\x03kok\x10\x0e\x12\x07\n\x03mai\x10\x0f\x12\x07\n\x03mni\x10\x10\x12\x06\n\x02ne\x10\x11\x12\x06\n\x02or\x10\x12\x12\x06\n\x02sd\x10\x13\x12\x06\n\x02si\x10\x14\x12\x06\n\x02ur\x10\x15\x12\x07\n\x03sat\x10\x17\x12\x07\n\x03lus\x10\x18\x12\x07\n\x03njz\x10\x19\x12\x07\n\x03pnr\x10\x1a\x12\x07\n\x03kha\x10\x1b\x12\x07\n\x03grt\x10\x1c\x12\x06\n\x02sa\x10\x1d\x12\x07\n\x03raj\x10\x1e\x12\x07\n\x03\x62ho\x10\x1f\x12\n\n\x06\x65n_bio\x10 \x12\t\n\x05hi_en\x10!B\x07\n\x05_name\"b\n\x10RecognitionAudio\x12\x15\n\x08\x61udioUri\x18\x01 \x01(\tH\x00\x88\x01\x01\x12\x19\n\x0c\x61udioContent\x18\x02 \x01(\x0cH\x01\x88\x01\x01\x42\x0b\n\t_audioUriB\x0f\n\r_audioContent\"\xa3\x03\n\x17SpeechRecognitionResult\x12I\n\x06status\x18\x01 \x01(\x0e\x32\x39.ekstep.speech_recognition.SpeechRecognitionResult.Status\x12I\n\x06output\x18\x02 \x03(\x0b\x32\x39.ekstep.speech_recognition.SpeechRecognitionResult.Output\x12\x42\n\x06\x63onfig\x18\x03 \x01(\x0b\x32-.ekstep.speech_recognition.RecognitionDetailsH\x00\x88\x01\x01\x12\x18\n\x0bstatus_text\x18\x04 \x01(\tH\x01\x88\x01\x01\x1a\x18\n\x06Output\x12\x0e\n\x06source\x18\x01 \x01(\t\"_\n\x06Status\x12\x0b\n\x07SUCCESS\x10\x00\x12\x0c\n\x08NO_MATCH\x10\x01\x12\x1b\n\x17INITIAL_SILENCE_TIMEOUT\x10\x02\x12\x12\n\x0e\x42\x41\x42\x42LE_TIMEOUT\x10\x03\x12\t\n\x05\x45RROR\x10\x04\x42\t\n\x07_configB\x0e\n\x0c_status_text\"\x99\x01\n\x12RecognitionDetails\x12\x12\n\nchannelTag\x18\x01 \x01(\x05\x12\x35\n\x08language\x18\x02 \x01(\x0b\x32#.ekstep.speech_recognition.Language\x12\x0b\n\x03snr\x18\x03 \x01(\x05\x12\x14\n\x0csamplingRate\x18\x04 \x01(\x05\x12\x15\n\rbitsPerSample\x18\x05 \x01(\x05\"?\n\x0b\x41lternative\x12\x0c\n\x04word\x18\x01 \x01(\t\x12\x11\n\tstartTime\x18\x02 \x01(\t\x12\x0f\n\x07\x65ndTime\x18\x03 \x01(\t\"F\n\x10PunctuateRequest\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x10\n\x08language\x18\x02 \x01(\t\x12\x12\n\nenabledItn\x18\x03 \x01(\x08\"3\n\x11PunctuateResponse\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x10\n\x08language\x18\x02 \x01(\t2\xb4\x03\n\x10SpeechRecognizer\x12`\n\x0frecognize_audio\x12\".ekstep.speech_recognition.Message\x1a#.ekstep.speech_recognition.Response\"\x00(\x01\x30\x01\x12\x8b\x01\n\tpunctuate\x12+.ekstep.speech_recognition.PunctuateRequest\x1a,.ekstep.speech_recognition.PunctuateResponse\"#\x82\xd3\xe4\x93\x02\x1d\"\x18/v1/punctuate/{language}:\x01*\x12\xaf\x01\n\trecognize\x12\x33.ekstep.speech_recognition.SpeechRecognitionRequest\x1a\x32.ekstep.speech_recognition.SpeechRecognitionResult\"9\x82\xd3\xe4\x93\x02\x33\"./v1/recognize/{config.language.sourceLanguage}:\x01*BC\n\'com.ekstep.endpoints.speech_recognitionB\x16SpeechRecognitionProtoP\x01\x62\x06proto3')



_MESSAGE = DESCRIPTOR.message_types_by_name['Message']
_RESPONSE = DESCRIPTOR.message_types_by_name['Response']
_SPEECHRECOGNITIONREQUEST = DESCRIPTOR.message_types_by_name['SpeechRecognitionRequest']
_RECOGNITIONCONFIG = DESCRIPTOR.message_types_by_name['RecognitionConfig']
_RECOGNITIONCONFIG_TRANSCRIPTIONFORMAT = _RECOGNITIONCONFIG.nested_types_by_name['TranscriptionFormat']
_LANGUAGE = DESCRIPTOR.message_types_by_name['Language']
_RECOGNITIONAUDIO = DESCRIPTOR.message_types_by_name['RecognitionAudio']
_SPEECHRECOGNITIONRESULT = DESCRIPTOR.message_types_by_name['SpeechRecognitionResult']
_SPEECHRECOGNITIONRESULT_OUTPUT = _SPEECHRECOGNITIONRESULT.nested_types_by_name['Output']
_RECOGNITIONDETAILS = DESCRIPTOR.message_types_by_name['RecognitionDetails']
_ALTERNATIVE = DESCRIPTOR.message_types_by_name['Alternative']
_PUNCTUATEREQUEST = DESCRIPTOR.message_types_by_name['PunctuateRequest']
_PUNCTUATERESPONSE = DESCRIPTOR.message_types_by_name['PunctuateResponse']
_RECOGNITIONCONFIG_TRANSCRIPTIONFORMATENUM = _RECOGNITIONCONFIG.enum_types_by_name['TranscriptionFormatEnum']
_RECOGNITIONCONFIG_AUDIOBITSPERSAMPLE = _RECOGNITIONCONFIG.enum_types_by_name['AudioBitsPerSample']
_RECOGNITIONCONFIG_AUDIOCHANNEL = _RECOGNITIONCONFIG.enum_types_by_name['AudioChannel']
_RECOGNITIONCONFIG_AUDIOFORMAT = _RECOGNITIONCONFIG.enum_types_by_name['AudioFormat']
_RECOGNITIONCONFIG_DOMAIN = _RECOGNITIONCONFIG.enum_types_by_name['Domain']
_RECOGNITIONCONFIG_MODEL = _RECOGNITIONCONFIG.enum_types_by_name['Model']
_LANGUAGE_LANGUAGECODE = _LANGUAGE.enum_types_by_name['LanguageCode']
_SPEECHRECOGNITIONRESULT_STATUS = _SPEECHRECOGNITIONRESULT.enum_types_by_name['Status']
Message = _reflection.GeneratedProtocolMessageType('Message', (_message.Message,), {
  'DESCRIPTOR' : _MESSAGE,
  '__module__' : 'speech_recognition_open_api_pb2'
  # @@protoc_insertion_point(class_scope:ekstep.speech_recognition.Message)
  })
_sym_db.RegisterMessage(Message)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSE,
  '__module__' : 'speech_recognition_open_api_pb2'
  # @@protoc_insertion_point(class_scope:ekstep.speech_recognition.Response)
  })
_sym_db.RegisterMessage(Response)

SpeechRecognitionRequest = _reflection.GeneratedProtocolMessageType('SpeechRecognitionRequest', (_message.Message,), {
  'DESCRIPTOR' : _SPEECHRECOGNITIONREQUEST,
  '__module__' : 'speech_recognition_open_api_pb2'
  # @@protoc_insertion_point(class_scope:ekstep.speech_recognition.SpeechRecognitionRequest)
  })
_sym_db.RegisterMessage(SpeechRecognitionRequest)

RecognitionConfig = _reflection.GeneratedProtocolMessageType('RecognitionConfig', (_message.Message,), {

  'TranscriptionFormat' : _reflection.GeneratedProtocolMessageType('TranscriptionFormat', (_message.Message,), {
    'DESCRIPTOR' : _RECOGNITIONCONFIG_TRANSCRIPTIONFORMAT,
    '__module__' : 'speech_recognition_open_api_pb2'
    # @@protoc_insertion_point(class_scope:ekstep.speech_recognition.RecognitionConfig.TranscriptionFormat)
    })
  ,
  'DESCRIPTOR' : _RECOGNITIONCONFIG,
  '__module__' : 'speech_recognition_open_api_pb2'
  # @@protoc_insertion_point(class_scope:ekstep.speech_recognition.RecognitionConfig)
  })
_sym_db.RegisterMessage(RecognitionConfig)
_sym_db.RegisterMessage(RecognitionConfig.TranscriptionFormat)

Language = _reflection.GeneratedProtocolMessageType('Language', (_message.Message,), {
  'DESCRIPTOR' : _LANGUAGE,
  '__module__' : 'speech_recognition_open_api_pb2'
  # @@protoc_insertion_point(class_scope:ekstep.speech_recognition.Language)
  })
_sym_db.RegisterMessage(Language)

RecognitionAudio = _reflection.GeneratedProtocolMessageType('RecognitionAudio', (_message.Message,), {
  'DESCRIPTOR' : _RECOGNITIONAUDIO,
  '__module__' : 'speech_recognition_open_api_pb2'
  # @@protoc_insertion_point(class_scope:ekstep.speech_recognition.RecognitionAudio)
  })
_sym_db.RegisterMessage(RecognitionAudio)

SpeechRecognitionResult = _reflection.GeneratedProtocolMessageType('SpeechRecognitionResult', (_message.Message,), {

  'Output' : _reflection.GeneratedProtocolMessageType('Output', (_message.Message,), {
    'DESCRIPTOR' : _SPEECHRECOGNITIONRESULT_OUTPUT,
    '__module__' : 'speech_recognition_open_api_pb2'
    # @@protoc_insertion_point(class_scope:ekstep.speech_recognition.SpeechRecognitionResult.Output)
    })
  ,
  'DESCRIPTOR' : _SPEECHRECOGNITIONRESULT,
  '__module__' : 'speech_recognition_open_api_pb2'
  # @@protoc_insertion_point(class_scope:ekstep.speech_recognition.SpeechRecognitionResult)
  })
_sym_db.RegisterMessage(SpeechRecognitionResult)
_sym_db.RegisterMessage(SpeechRecognitionResult.Output)

RecognitionDetails = _reflection.GeneratedProtocolMessageType('RecognitionDetails', (_message.Message,), {
  'DESCRIPTOR' : _RECOGNITIONDETAILS,
  '__module__' : 'speech_recognition_open_api_pb2'
  # @@protoc_insertion_point(class_scope:ekstep.speech_recognition.RecognitionDetails)
  })
_sym_db.RegisterMessage(RecognitionDetails)

Alternative = _reflection.GeneratedProtocolMessageType('Alternative', (_message.Message,), {
  'DESCRIPTOR' : _ALTERNATIVE,
  '__module__' : 'speech_recognition_open_api_pb2'
  # @@protoc_insertion_point(class_scope:ekstep.speech_recognition.Alternative)
  })
_sym_db.RegisterMessage(Alternative)

PunctuateRequest = _reflection.GeneratedProtocolMessageType('PunctuateRequest', (_message.Message,), {
  'DESCRIPTOR' : _PUNCTUATEREQUEST,
  '__module__' : 'speech_recognition_open_api_pb2'
  # @@protoc_insertion_point(class_scope:ekstep.speech_recognition.PunctuateRequest)
  })
_sym_db.RegisterMessage(PunctuateRequest)

PunctuateResponse = _reflection.GeneratedProtocolMessageType('PunctuateResponse', (_message.Message,), {
  'DESCRIPTOR' : _PUNCTUATERESPONSE,
  '__module__' : 'speech_recognition_open_api_pb2'
  # @@protoc_insertion_point(class_scope:ekstep.speech_recognition.PunctuateResponse)
  })
_sym_db.RegisterMessage(PunctuateResponse)

_SPEECHRECOGNIZER = DESCRIPTOR.services_by_name['SpeechRecognizer']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\'com.ekstep.endpoints.speech_recognitionB\026SpeechRecognitionProtoP\001'
  _SPEECHRECOGNIZER.methods_by_name['punctuate']._options = None
  _SPEECHRECOGNIZER.methods_by_name['punctuate']._serialized_options = b'\202\323\344\223\002\035\"\030/v1/punctuate/{language}:\001*'
  _SPEECHRECOGNIZER.methods_by_name['recognize']._options = None
  _SPEECHRECOGNIZER.methods_by_name['recognize']._serialized_options = b'\202\323\344\223\0023\"./v1/recognize/{config.language.sourceLanguage}:\001*'
  _MESSAGE._serialized_start=94
  _MESSAGE._serialized_end=183
  _RESPONSE._serialized_start=185
  _RESPONSE._serialized_end=266
  _SPEECHRECOGNITIONREQUEST._serialized_start=269
  _SPEECHRECOGNITIONREQUEST._serialized_end=417
  _RECOGNITIONCONFIG._serialized_start=420
  _RECOGNITIONCONFIG._serialized_end=1881
  _RECOGNITIONCONFIG_TRANSCRIPTIONFORMAT._serialized_start=1170
  _RECOGNITIONCONFIG_TRANSCRIPTIONFORMAT._serialized_end=1276
  _RECOGNITIONCONFIG_TRANSCRIPTIONFORMATENUM._serialized_start=1278
  _RECOGNITIONCONFIG_TRANSCRIPTIONFORMATENUM._serialized_end=1346
  _RECOGNITIONCONFIG_AUDIOBITSPERSAMPLE._serialized_start=1348
  _RECOGNITIONCONFIG_AUDIOBITSPERSAMPLE._serialized_end=1392
  _RECOGNITIONCONFIG_AUDIOCHANNEL._serialized_start=1394
  _RECOGNITIONCONFIG_AUDIOCHANNEL._serialized_end=1430
  _RECOGNITIONCONFIG_AUDIOFORMAT._serialized_start=1432
  _RECOGNITIONCONFIG_AUDIOFORMAT._serialized_end=1482
  _RECOGNITIONCONFIG_DOMAIN._serialized_start=1485
  _RECOGNITIONCONFIG_DOMAIN._serialized_end=1627
  _RECOGNITIONCONFIG_MODEL._serialized_start=1629
  _RECOGNITIONCONFIG_MODEL._serialized_end=1700
  _LANGUAGE._serialized_start=1884
  _LANGUAGE._serialized_end=2297
  _LANGUAGE_LANGUAGECODE._serialized_start=1990
  _LANGUAGE_LANGUAGECODE._serialized_end=2288
  _RECOGNITIONAUDIO._serialized_start=2299
  _RECOGNITIONAUDIO._serialized_end=2397
  _SPEECHRECOGNITIONRESULT._serialized_start=2400
  _SPEECHRECOGNITIONRESULT._serialized_end=2819
  _SPEECHRECOGNITIONRESULT_OUTPUT._serialized_start=2671
  _SPEECHRECOGNITIONRESULT_OUTPUT._serialized_end=2695
  _SPEECHRECOGNITIONRESULT_STATUS._serialized_start=2697
  _SPEECHRECOGNITIONRESULT_STATUS._serialized_end=2792
  _RECOGNITIONDETAILS._serialized_start=2822
  _RECOGNITIONDETAILS._serialized_end=2975
  _ALTERNATIVE._serialized_start=2977
  _ALTERNATIVE._serialized_end=3040
  _PUNCTUATEREQUEST._serialized_start=3042
  _PUNCTUATEREQUEST._serialized_end=3112
  _PUNCTUATERESPONSE._serialized_start=3114
  _PUNCTUATERESPONSE._serialized_end=3165
  _SPEECHRECOGNIZER._serialized_start=3168
  _SPEECHRECOGNIZER._serialized_end=3604
# @@protoc_insertion_point(module_scope)
